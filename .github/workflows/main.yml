on:
  pull_request:
    branches:
      - main
      - master

  push:
    branches:
      - main
      - master
      - develop

name: "Build release APKs"
jobs:
  build:
    name: Build release APKs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: '12'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'
      - run: flutter pub get
      - run: flutter test
      - name: Build Apk
        run: flutter build apk --split-per-abi --build-number=${GITHUB_RUN_NUMBER}

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Get SHA-256 Checksums
        run: |
          set -e
          mv build/app/outputs/flutter-apk/app-signed.apk app-signed.apk
          sha=`sha256sum app-signed.apk | awk '{ print $1 }'`
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

          cp build/app/outputs/flutter-apk/app-arm64-v8a-release-signed.apk app-arm64-v8a-release-signed.apk
          sha=`sha256sum app-arm64-v8a-release-signed.apk | awk '{ print $1 }'`
          echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release-signed.apk app-armeabi-v7a-release-signed.apk
          sha=`sha256sum app-armeabi-v7a-release-signed.apk | awk '{ print $1 }'`
          echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

          cp build/app/outputs/flutter-apk/app-x86_64-release-signed.apk app-x86_64-release-signed.apk
          sha=`sha256sum app-x86_64-release-signed.apk | awk '{ print $1 }'`
          echo "APK_X86_SHA=$sha" >> $GITHUB_ENV

      # - name: Get apk path
      #   id: apk-path
      #   run: |
      #     path=$(find **/build/outputs/apk -name '*.apk' -type f | head -1)
      #     echo "::set-output name=path::$path"

      - name: Get Apk Info
        id: apk-info
        uses: hkusu/apk-info-action@v1
        with:
          apk-path: build/app/outputs/flutter-apk/app-arm64-v8a-release-signed.apk

      - name: Show Apk Info
        run: echo "APK_VERSION=${{ steps.apk-info.outputs.version-name }}" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.APK_VERSION }}-${{ github.run_number }}
          name: ChuckAPI v${{ env.APK_VERSION }}-${{ github.run_number }}
          body: |
            ---
            ### Checksums
            | Variant | SHA-256 |
            | ------- | ------- |
            | arm64-v8a | ${{ env.APK_ARM64_V8A_SHA }}
            | armeabi-v7a | ${{ env.APK_ARMEABI_V7A_SHA }}
            | x86 | ${{ env.APK_X86_SHA }} |
          files: |
            build/app/outputs/flutter-apk/app-arm64-v8a-release-signed.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release-signed.apk
            build/app/outputs/flutter-apk/app-x86_64-release-signed.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}


      # - name: Sign APK
      #   uses: r0adkll/sign-android-release@v1
      #   with:
      #     releaseDirectory: build/app/outputs/apk/release
      #     signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #     alias: ${{ secrets.ALIAS }}
      #     keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.KEY_PASSWORD }}

      # - uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/release/*"
      #     tag: v1.0.${{ github.run_number }}
      #     token: ${{ secrets.TOKEN }}
